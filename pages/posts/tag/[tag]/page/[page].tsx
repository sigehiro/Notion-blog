import { GetStaticPaths, GetStaticProps } from "next";
import Head from 'next/head'
import SinglePost from '../../../../../components/Post/SinglePost'
import Pagination from "../../../../../components/Pagination/pagination"
import { getAllPosts, 
getNumberOfPages,
getPostByPage,
getPostForTopPage,
getPostsByTagAndPage,
} from '../../../../../lib/notionAPI';


export const getStaticPaths: GetStaticPaths = async () => {
    // const numberOfPage = await getNumberOfPages();

    // let params = [];
    // for(let i = 1; i <+ numberOfPage; i++){
    //     params.push({ params:{ page:i.toString()} });
    // }

    return {
        // paths: params,
        paths: 
        [{ params: { tag: "blog" , page: "1"} }],
        fallback:"blocking",
    };
};

export const getStaticProps: GetStaticProps = async (context) => {
    const currentPage: string = context.params?.page.toString();
    const currentTag: string = context.params?.tag.toString();
    // tagの大文字の呼び出し
    const upperCaseCurrentTag =
    currentTag.charAt(0).toUpperCase() + currentTag.slice(1);

    const posts = await getPostsByTagAndPage(
        upperCaseCurrentTag,
        parseInt(currentPage, 10)
    );

  return{
    props:{
      posts,
    },
    revalidate: 10,
  };
};


const BlogTagPageList = ({ numberOfPage, posts }) => {
  return (
    <div className="container h-full w-full mx-auto">
      <Head>
        <title>Notion-Blog</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="container w-full mt-16">
        <h1 className="text-5xl font-medium text-center mb-16">
          Notion blog
        </h1>
        <section className="sm:grid grid-cols-2 w-5/6 gap-3 mx-auto">
            {posts.map((post) => (
            <div key={post.id}>
                <SinglePost
                    title = {post.title}
                    description = {post.description}
                    date = {post.date}
                    tags = {post.tags}
                    slug = {post.slug}
                    isPaginationPage = {true}
                />
            </div>
            ))}
        </section>
        {/* <Pagination /> */}
        <Pagination numberOfPage={numberOfPage}/>
      </main>
    </div>
  );
};

export default BlogTagPageList;
